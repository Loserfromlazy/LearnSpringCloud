server:
  port: 8071
#注册到Eureka服务中心
eureka:
  client:
    service-url:
      # 注册到集群，把多个server地址用逗号连接即可。如果Eureka Server是单实例就写一个就行。
      defaultZone: http://CloudEurekaServerA:8761/eureka/,http://CloudEurekaServerB:8762/eureka/
  instance:
    metadata-map:
      testkey: testvalue
      myname: haha
spring:
  application:
    name: autodeliver
  cloud:
    config:
      name: test #配置文件名文件名可以配多个逗号分隔
      profile: dev #后缀名
      label: master #分支名
      uri: http://localhost:8050
# springboot中暴露健康检查等断点接⼝
management:
  endpoints:
   web:
    exposure:
     include: "*"
  # 暴露健康接⼝的细节
  endpoint:
   health:
    show-details: always
#针对的被调用的微服务名称,不加就是对所有调用的微服务生效
user:
  ribbon:
    #请求连接超时时间
    ConnectTimeout: 2000
    #请求处理超时时间
    ReadTimeout: 3000
    #对所有操作都进行重试
    OkToRetryOnAllOperations: true
    ####根据如上配置，当访问到故障请求的时候，它会再尝试访问1次当前实例（次数由MaxAutoRetries配置），
    ####如果不行，就换一个实例进行访问，如果还不行，再换1次实例访问（更换次数由MaxAutoRetriesNextServer配置），
    ####如果依然不行，返回失败信息。
    MaxAutoRetries: 0 #对当前选中实例重试次数，不包括第一次调用
    MaxAutoRetriesNextServer: 0 #切换实例的重试次数
    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RoundRobinRule #负载策略调整
logging:
  level:
    #Feign日志只会对日志级别为debug做出响应
    com.learn.controller.feign.UserServiceFeignClient: debug
# 开启Feign的熔断功能
feign:
  hystrix:
   enabled: true
  compression:
    request:
      enabled: true #开启请求压缩
      min-request-size: 2048 #出发压缩的大小下限
      mime-types: text/html,application/xml,application/json #设置压缩的数据类型
    response:
      enabled: true #开启响应压缩
#配置hystrix的超时时长
hystrix:
 command:
  default:
   execution:
    isolation:
     thread:
      timeoutInMilliseconds: 15000

